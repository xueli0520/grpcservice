syntax = "proto3";

package hk_device;

import "google/protobuf/empty.proto"; 

option go_package = "/proto";
option csharp_namespace = "GrpcService";


// 海康设备 gRPC 服务
service HikDeviceService {
  rpc SubscribeAllEvents(google.protobuf.Empty) returns (stream DeviceEvent);
  //健康检查，获取服务器信息（完成）
  rpc GetServerInfo(google.protobuf.Empty) returns (ServerInfoResponse);
  //设备注册回调（完成）
  rpc Register(RegisterRequest) returns (RegisterResponse);
  // 获取设备信息（完成）
  rpc GetDeviceInfo(GetDeviceInfoRequest) returns (GetDeviceInfoResponse);
  // 开门（完成）
  rpc OpenDoor(OpenDoorRequest) returns (OpenDoorResponse);
  // 重启设备（完成）
  rpc Reboot(RebootRequest) returns (RebootResponse);
  // 同步时间（完成）
  rpc SyncTime(SyncTimeRequest) returns (SyncTimeResponse);
  // 获取设备版本（完成）
  rpc GetVersion(GetVersionRequest) returns (GetVersionResponse);
  // 设置门禁模式
  rpc SetDoorMode(SetDoorModeRequest) returns (SetDoorModeResponse);
  // 获取设备状态
  rpc GetDeviceStatus(GetDeviceStatusRequest) returns (GetDeviceStatusResponse);
  // 人员管理相关(完成)
  rpc UpdateWhite(UpdateWhiteRequest) returns (UpdateWhiteResponse);
  rpc DeleteWhite(DeleteWhiteRequest) returns (DeleteWhiteResponse);
  rpc PageWhite(PageWhiteRequest) returns (PageWhiteResponse);
  // 时段管理相关（完成）
  rpc UpdateTimezone(UpdateTimezoneRequest) returns (UpdateTimezoneResponse);
  // 门禁模板相关
  rpc SetDoorTemplate(DoorTemplateRequest) returns (DoorTemplateResponse);
  // 设备参数同步
  rpc SyncDeviceParameter(SyncDeviceParameterRequest) returns (SyncDeviceParameterResponse);
  // 获取白名单总数（完成）
  rpc GetWhiteUserTotal(GetWhiteUserTotalRequest) returns (GetWhiteUserTotalResponse);
}

message GetUserTotalRequest{
  string device_id = 1;
  string  message_id = 2;
}

message GetUserTotalResponse{ 
  int32 TotalCount = 1;
  string device_id = 2;
}

message RegisterRequest{
	string device_id = 1;
	string message_id = 2;
}
message RegisterResponse {
	bool success = 1;
	string device_id = 2;
}

message ServerInfoResponse {
  string server_name = 1;
  string version = 2;
  int64  uptime_seconds = 3;
  string status = 4;
}

// 订阅请求
message SubscribeRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
}
message DeviceEvent {
  string device_id = 2;
  string event_type = 3;
  string payload = 4; // JSON 或 XML，根据 SDK 回调内容
}

// 开门请求
message OpenDoorRequest {
  string device_id = 1;  // 设备ID
  string operator = 2;   // 操作员
  string message_id = 3; // 消息ID
}

// 开门响应
message OpenDoorResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  string device_id = 4;
}

// 重启请求
message RebootRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
}

// 重启响应
message RebootResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  string device_id = 4;
}

// 同步时间请求
message SyncTimeRequest {
  string device_id = 1;
  int64 timestamp = 2;
  string operator = 3;
  string message_id = 4;
}

// 同步时间响应
message SyncTimeResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  string device_id = 4;
}

// 获取设备信息请求
message GetDeviceInfoRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
}

// 获取设备信息响应
message GetDeviceInfoResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  DeviceInfo device_info = 4;
  string device_id = 5;
}

// 设备信息
message DeviceInfo {
  string device_id = 1;
  string device_name = 2;
  string firmware_version = 3;
  string protocol_version = 4;
  string ip_address = 5;
  int32 user_count = 6;
  int64 last_online_time = 7;
}

// 设置门禁模式请求
message SetDoorModeRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
  int32 mode = 4;  // 0: 常关, 1: 常开
}

// 设置门禁模式响应
message SetDoorModeResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  string device_id = 4;
}

// 获取设备状态请求
message GetDeviceStatusRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
}

// 获取设备状态响应
message GetDeviceStatusResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  DeviceStatus device_status = 4;
  string device_id = 5;
}

// 设备状态
message DeviceStatus {
  string device_id = 1;
  bool online = 2;
  string door_status = 3;  // "open", "closed", "unknown"
  int32 alarm_status = 4;  // 0: 正常, 1: 报警
  int64 last_heartbeat = 5;
  string ip_address = 6;
}

// 更新白名单请求
message UpdateWhiteRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
  WhiteUserInfo users = 4;
  int32 person_num = 5;
  string data_begin = 6;
  string data_end = 7;
}

// 白名单用户信息
message WhiteUserInfo {
	string employeeNo=1;
	string name=2;
	string cardNumber=3;
	string userType=4;
	string startOn=5;
	string endOn=6;
	string gender=7;
	string devPassword=8;	
	string carNumber=9;
	string picPath=10;
}
// 更新白名单响应
message UpdateWhiteResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  string device_id = 6;
 WhiteUserInfo users = 7;
}

// 删除白名单请求
message DeleteWhiteRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
  repeated string custom_ids = 4;
  int32 person_num = 5;
}

// 删除白名单响应
message DeleteWhiteResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  int32 deleted_count = 4;
  int32 total_count = 5;
  string device_id = 6;
}

// 分页获取白名单请求
message PageWhiteRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
  int32 begin_no = 4;
  int32 page_size = 5;
}

// 分页获取白名单响应
message PageWhiteResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  repeated WhiteUserInfo users = 4;
  int32 total_count = 5;
  string device_id = 6;
}

// 更新时段请求
message UpdateTimezoneRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
  TimezoneGroup timezone_group = 4;
}
message TimezoneGroup {
  UserRightWeekPlanCfg user_right_week_plan_cfg = 1; 
}

message UserRightWeekPlanCfg {
  bool enable = 1;
  repeated WeekPlanCfg week_plan_cfg = 2;
}

message WeekPlanCfg {
  string week = 1;
  int32 id = 2;
  bool enable = 3;
  TimeSegment time_segment = 4;
}

message TimeSegment {
  string begin_time = 1;
  string end_time = 2;
}
// 更新时段响应
message UpdateTimezoneResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  string device_id = 4;
}

// 门禁模板请求
message DoorTemplateRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
  int32 status = 4;  // 0: 常关, 1: 常开
}

// 门禁模板响应
message DoorTemplateResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  string device_id = 4;
}

// 同步设备参数请求
message SyncDeviceParameterRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
}

// 同步设备参数响应
message SyncDeviceParameterResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  string device_id = 4;
}

// 获取白名单总数请求
message GetWhiteUserTotalRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
}

// 获取白名单总数响应
message GetWhiteUserTotalResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  int32 total_count = 4;
  string device_id = 5;
}

// 获取设备版本请求
message GetVersionRequest {
  string device_id = 1;
  string operator = 2;
  string message_id = 3;
}

// 获取设备版本响应
message GetVersionResponse {
  bool success = 1;
  string message = 2;
  string error_code = 3;
  string version = 4;
  string firmware_version = 5;
} 